/**
 * 
 */
package com.assaassociates.syraway.persistence.jpa;

import java.util.ArrayList;
import java.util.List;
import javax.annotation.PostConstruct;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.TypedQuery;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Isolation;
import org.springframework.transaction.annotation.Transactional;
import com.assaassociates.syraway.dao.IBusinessUnitDAO;
import com.assaassociates.syraway.dao.IBusinessUnitExDAO;
import com.assaassociates.syraway.model.BusinessUnit;
import com.assaassociates.syraway.model.BusinessUnitEx;

/**
 * @author waheb
 *
 */


@Repository(value="BusinessUnitExDAO")
public class BusinessUnitExDAOImpl implements IBusinessUnitExDAO {

	@PersistenceContext
	EntityManager oEntityManager;
	
	static Logger logger = LoggerFactory.getLogger(BusinessUnitDAOImpl.class);
	
	@PostConstruct
	void initLogging(){
		logger.info("BusinessUnitDAOImpl Instanciated ...");
	}

	@Transactional(isolation=Isolation.READ_COMMITTED)
	public BusinessUnitEx getBusinessUnitExById(int pId) {
		if(oEntityManager != null)
			return oEntityManager.find(BusinessUnitEx.class, pId);
		
		logger.info("EntityManager is null ... Cant't get Business Unit Ex by Id");
		return null;
	}

	@Transactional(isolation=Isolation.DEFAULT)
	public void addBusinessUnitEx(int pBuExId) {
		if(oEntityManager != null){
			BusinessUnitEx oBu = new BusinessUnitEx();
			oBu.setBuExId(pBuExId);
			oEntityManager.persist(pBuExId);
		}else
			logger.info("EntityManager is null ... Cant't add Business Unit Ex.");
	}

	@Transactional(isolation=Isolation.DEFAULT)
	public void addBusinessUnitEx(BusinessUnitEx pBusinessUnitEx) {
		if(oEntityManager != null){
			oEntityManager.persist(pBusinessUnitEx);
		}else
			logger.info("EntityManager is null ... Cant't add Business Unit Ex.");
	}

	@Transactional(isolation=Isolation.DEFAULT)
	public void removeBusinessUnitEx(int pBuExId) {
		if(oEntityManager != null){
			BusinessUnitEx oBuEx = getBusinessUnitExById(pBuExId);
			if(oBuEx != null){
				oEntityManager.remove(oBuEx);
			}
		}else
			logger.info("EntityManager is null ... Cant't remove Business Unit Ex.");
	}

	@Transactional(isolation=Isolation.DEFAULT)
	public void removeBusinessUnit(BusinessUnit pBusinessUnit) {
		if(oEntityManager != null){
			oEntityManager.remove(pBusinessUnit);
		}else
			logger.info("EntityManager is null ... Cant't remove Business Unit.");
	}

	@Transactional(isolation=Isolation.READ_COMMITTED)
	public List<BusinessUnit> getAllBusinessUnit() {
		if(oEntityManager != null){
			TypedQuery<BusinessUnit> oQuery = oEntityManager.createQuery("SELECT bu FROM BusinessUnit AS bu",BusinessUnit.class);
			return oQuery.getResultList();
		}
		return new ArrayList<BusinessUnit>();
	}

}