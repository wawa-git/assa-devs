package com.assaassosiates.syraway.security;

import javax.faces.bean.ManagedBean;
import javax.faces.bean.RequestScoped;
import javax.inject.Inject;
import javax.inject.Named;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.authentication.AuthenticationManager;
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.AuthenticationException;
import org.springframework.security.core.context.SecurityContextHolder;


@ManagedBean(name="loginBean")
@RequestScoped
public class LoginBean {
	
	@Autowired
	private final AuthenticationManager oAuthenticationManager;
	private String userName = "admin"; 
	private String password = "admin";
	@Inject
	public LoginBean(@Named("authenticationManager") AuthenticationManager pAm){
		this.oAuthenticationManager = pAm;
	}
	
	public LoginBean(){
		super();
		
	}
	
	 public String login() {
	        try {
	            Authentication request = new UsernamePasswordAuthenticationToken(this.getUserName(), this.getPassword());
	            Authentication result = oAuthenticationManager.authenticate(request);
	            SecurityContextHolder.getContext().setAuthentication(result);
	        } catch (AuthenticationException e) {
	            //String loginFailedMessage = FacesUtils.getBundleKey("msg", "login.failed");
	            //FacesUtils.addErrorMessage(loginFailedMessage);
	            System.err.println("error logIn " + e);
	        	return null;
	        }
	        return "/secured/person/list?faces-redirect=true";
	    }

	public String getUserName() {
		return userName;
	}

	public void setUserName(String userName) {
		this.userName = userName;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

}
