/**
 * 
 */
package com.assaassociates.syraway.persistence.jpa;

import java.util.ArrayList;
import java.util.List;
import javax.annotation.PostConstruct;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.TypedQuery;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Isolation;
import org.springframework.transaction.annotation.Transactional;
import com.assaassociates.syraway.dao.IEmployeeDAO;
import com.assaassociates.syraway.dao.IOprIdDAO;
import com.assaassociates.syraway.model.Employee;
import com.assaassociates.syraway.model.Oprid;

/**
 * @author waheb
 *
 */


@Repository(value="opridDAO")
public class OpridDAOImpl implements IOprIdDAO {

	@PersistenceContext
	EntityManager oEntityManager;
	
	static Logger logger = LoggerFactory.getLogger(OpridDAOImpl.class);
	
	@PostConstruct
	void initLogging(){
		logger.info("OpridDAOImpl Instanciated ...");
	}

	@Transactional(isolation=Isolation.READ_COMMITTED)
	public Oprid getOpridById(String pOprid) {
		if(oEntityManager != null){
			return oEntityManager.find(Oprid.class, pOprid);
		}
		logger.info("EntityManager is null ... Cant't get Oprid by Id");
		return null;
	}

	@Transactional(isolation=Isolation.READ_COMMITTED)
	public Oprid getOpridOfEmployee(String pEmployeeId) {
		if(oEntityManager != null){
			TypedQuery<Oprid> oQuery = oEntityManager.createQuery("SELECT op FROM Oprid op WHERE emplId = :pEmployeeId",Oprid.class);
			oQuery.setParameter("pEmployeeId", pEmployeeId);
			return oQuery.getSingleResult();
		}
		logger.info("EntityManager is null ... Can't get Oprid of Employee");
		return new Oprid();
	}

	@Transactional(isolation=Isolation.DEFAULT)
	public void addOprid(Oprid oOprid) {
		if(oEntityManager != null){
			oEntityManager.persist(oOprid);
		}else
			logger.info("EntityManager is null ... Cant't add Oprid.");
	}
	
	@Transactional(isolation=Isolation.DEFAULT)
	public void removeEmployee(String pEmployeePK) {
		if(oEntityManager != null){
			Employee oEmployee = getEmployeeById(pEmployeePK);
			oEntityManager.remove(oEmployee);
		}else
			logger.info("EntityManager is null ... Cant't remove Employee.");
	}

	@Transactional(isolation=Isolation.DEFAULT)
	public void removeEmployee(Employee pEmployee) {
		if(oEntityManager != null){
			oEntityManager.remove(pEmployee);
		}else
			logger.info("EntityManager is null ... Cant't remove Employee.");
	}

	@Transactional(isolation=Isolation.READ_COMMITTED)
	public List<Employee> getAllEmployee() {
		if(oEntityManager != null){
			TypedQuery<Employee> oQuery = oEntityManager.createQuery("SELECT empl FROM Employee As empl",Employee.class);
			return oQuery.getResultList();
		}
		return new ArrayList<Employee>();
	}

	public void updateOprid(Oprid oOprid) {
		// TODO Auto-generated method stub
		
	}

	public void removeOprid(Oprid pOprid) {
		// TODO Auto-generated method stub
		
	}

	public void removeOprid(String pOpridId) {
		// TODO Auto-generated method stub
		
	}

}
